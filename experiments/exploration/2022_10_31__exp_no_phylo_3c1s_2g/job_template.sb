#!/bin/bash --login
#SBATCH --time=24:00:00
#SBATCH --nodes=1
#SBATCH --ntasks=1
#SBATCH --cpus-per-task=1
#SBATCH --mem-per-cpu=2g
#SBATCH --job-name (<EXP_NAME>)
#SBATCH --array=1-200
#SBATCH --output=(<SCRATCH_SLURM_OUT_DIR>)/slurm-%A_%a.out

# Load the necessary modules
module purge
module load GCC/11.2.0
module load OpenMPI/4.1.1
module load R/4.1.2

# Calculate the seed
SEED_BASE=22103102000000
SEED=$((${SEED_BASE} + ${SLURM_ARRAY_TASK_ID}))
echo "Random seed: ${SEED}: Replicate ID: ${SLURM_ARRAY_TASK_ID}"

# Grab all the needed directories
SCRATCH_EXP_DIR=(<SCRATCH_EXP_DIR>)
SCRATCH_FILE_DIR=(<SCRATCH_FILE_DIR>)
SCRATCH_JOB_DIR=${SCRATCH_EXP_DIR}/reps/${SLURM_ARRAY_TASK_ID}

# Create replicate-specific directories
mkdir -p ${SCRATCH_JOB_DIR}
mkdir -p ${SCRATCH_JOB_DIR}/phylo
cd ${SCRATCH_JOB_DIR}

# Run!
time ${SCRATCH_FILE_DIR}/MABE -f ${SCRATCH_FILE_DIR}/shared_config.mabe ${SCRATCH_FILE_DIR}/evolution.mabe -s random_seed=${SEED}

# Analyze final dominant org
tail -n 1 fitness.csv | grep -oP "\"\[\d+\]\w+\"" | grep -oP "\]\w+" | grep -oP "\w+" > final_dominant_char.org
DOMINANT_GENOME=$(cat final_dominant_char.org)
python3 ${SCRATCH_FILE_DIR}/genome_conversion.py -c ${DOMINANT_GENOME} final_dominant.org inst_set_output.txt 
time ${SCRATCH_FILE_DIR}/MABE -f ${SCRATCH_FILE_DIR}/shared_config.mabe ${SCRATCH_FILE_DIR}/analysis.mabe -s random_seed=${SEED} -s avida_org.initial_genome_filename=\"final_dominant.org\"

scontrol show job $SLURM_JOB_ID
