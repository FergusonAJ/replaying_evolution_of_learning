#!/bin/bash --login
#SBATCH --time=01:30:00
#SBATCH --nodes=1
#SBATCH --ntasks=1
#SBATCH --cpus-per-task=1
#SBATCH --mem-per-cpu=2g
#SBATCH --job-name (<EXP_NAME>)__(<FOCAL_SEED>)_(<FOCAL_DEPTH>)
#SBATCH --array=1-1
#SBATCH --output=(<SCRATCH_SLURM_OUT_DIR>)/slurm_mut_(<FOCAL_SEED>)_(<FOCAL_DEPTH>)-%A_%a.out

IS_MOCK=0
LOAD_MODULES=1
while getopts ":ml" opt; do
  case $opt in
    m)
     IS_MOCK=1
      ;;
    l)
     LOAD_MODULES=0
      ;;
    \?)
      echo "Invalid option: -$OPTARG" >&2
      ;;
  esac
done

# If this is a mocked job 
if [ ${IS_MOCK} -gt 0 ]
then
    SLURM_ARRAY_TASK_ID=1
fi

# Load the necessary modules
if [ ${LOAD_MODULES} -gt 0 ]
then
  module purge
  module load GCC/11.2.0
  module load OpenMPI/4.1.1
  module load R/4.1.2
fi

# Variables to be configured by user
NUM_ONE_STEP_MUTS=100000
NUM_TRIALS=10
DO_TWO_STEP=0
OUTPUT_PREFIX=one_step_muts

# Fill in variables via launch script
FOCAL_SEED=(<FOCAL_SEED>)
FOCAL_DEPTH=(<FOCAL_DEPTH>)
EXP_NAME=(<EXP_NAME>)

# Calculate values based on experiment name
YEAR=$( echo "$EXP_NAME" | grep -oP "^\d\d\d\d" )
YEAR_SHORT=$(echo ${YEAR} | grep -oP "\d\d$")
MONTH=$( echo "$EXP_NAME" | grep -oP "^\d+_\d+" | grep -oP "\d+$" )
DAY=$( echo "$EXP_NAME" | grep -oP "^\d+_\d+_\d+" | grep -oP "\d+$" )
EXP_ID=$( echo "$EXP_NAME" | grep -oP "^\d+_\d+_\d+_\d+" | grep -oP "\d+$" )

# The base seed (modified for individal replicates)
# Format:  YYMMDDID000000
# Example: 23011301000000
SEED_BASE=${YEAR_SHORT}${MONTH}${DAY}${EXP_ID}000000
OLD_SEED=$((${SEED_BASE} + ${FOCAL_SEED}))
echo "Old random seed: ${OLD_SEED}: Replicate ID: ${SLURM_ARRAY_TASK_ID}"
SEED_OFFSET=$((2000 * ${FOCAL_SEED}))
SEED_OFFSET=$((${SEED_OFFSET} + ${SLURM_ARRAY_TASK_ID}))
NEW_SEED=$((${SEED_BASE} + ${SEED_OFFSET}))
echo "New random seed: ${NEW_SEED}: Replicate ID: ${SLURM_ARRAY_TASK_ID}"


# Grab all the needed directories
SCRATCH_EXP_DIR=(<SCRATCH_EXP_DIR>)
SCRATCH_FILE_DIR=(<SCRATCH_FILE_DIR>)
SCRATCH_BASE_JOB_DIR=${SCRATCH_EXP_DIR}/reps/${FOCAL_SEED}
SCRATCH_JOB_DIR=${SCRATCH_BASE_JOB_DIR}/mutants/${FOCAL_DEPTH}

# Grab genome from old lineage
cd ${SCRATCH_BASE_JOB_DIR}
START_GENOME=$(Rscript ${SCRATCH_FILE_DIR}/extract_from_lineage.R ${FOCAL_DEPTH}) 

# Create replicate-specific directories
mkdir -p ${SCRATCH_JOB_DIR}
mkdir -p ${SCRATCH_JOB_DIR}/phylo
cd ${SCRATCH_JOB_DIR}

# Calculate mutation-specific variables
MUT_START_SEED=$((${NUM_ONE_STEP_MUTS} * (${SLURM_ARRAY_TASK_ID} - 1) ))
ALPHABET_SIZE=$(wc -l ${SCRATCH_BASE_JOB_DIR}/inst_set_output.txt | grep -oP "^\d+")
ALPHABET_SIZE=$((${ALPHABET_SIZE} - 1))
echo "Starting at mutation seed: ${MUT_START_SEED}"

# Analyze mutants! 
time ${SCRATCH_FILE_DIR}/MABE \
    -f ${SCRATCH_FILE_DIR}/base_3c1s_config.mabe \
        ${SCRATCH_FILE_DIR}/config_diff.mabe \
        ${SCRATCH_FILE_DIR}/mutant_analysis.mabe \
    -s random_seed=${NEW_SEED} \
    -s avida_org.inst_set_input_filename=\"${SCRATCH_FILE_DIR}/inst_set_input.txt\" \
    -s avida_org.initial_genome_filename=\"${SCRATCH_FILE_DIR}/ancestor.org\" \
    -s output_filename=\"${OUTPUT_PREFIX}_${SLURM_ARRAY_TASK_ID}.csv\" \
    -s num_one_step_muts=${NUM_ONE_STEP_MUTS} \
    -s one_step_mut_seed=${MUT_START_SEED} \
    -s original_genome=\"${START_GENOME}\" \
    -s alphabet_size=${ALPHABET_SIZE} \
    -s num_trials=${NUM_TRIALS} \
    -s do_two_step=${DO_TWO_STEP} 

# Analyze!
Rscript ${SCRATCH_FILE_DIR}/local_mutation_analysis.R ${SCRATCH_FILE_DIR} ${SCRATCH_JOB_DIR} ${SCRATCH_JOB_DIR} ${FOCAL_SEED} ${FOCAL_DEPTH} ${SLURM_ARRAY_TASK_ID} ${DO_TWO_STEP}

if [ ${IS_MOCK} -eq 0 ]
then
  scontrol show job $SLURM_JOB_ID
fi
