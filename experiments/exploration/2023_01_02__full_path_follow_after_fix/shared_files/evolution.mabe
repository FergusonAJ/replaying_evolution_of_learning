Var dominant_genome;
DataFile fit_file { filename="fitness.csv"; };
fit_file.ADD_SETUP("dominant_genome = main_pop.CALC_MODE('genome')" );
fit_file.ADD_COLUMN("merit_mean",       "main_pop.CALC_MEAN('child_merit')" );
fit_file.ADD_COLUMN("merit_max",        "main_pop.CALC_MAX('child_merit')" );
fit_file.ADD_COLUMN("dominant_genome",  "dominant_genome" );
fit_file.ADD_COLUMN("gen_mean", "main_pop.CALC_MEAN('generation')" );
fit_file.ADD_COLUMN("gen_max", "main_pop.CALC_MAX('generation')" );
fit_file.ADD_COLUMN("genome_length_mean", "main_pop.CALC_MEAN('genome_length')" );

DataFile max_file { filename="max_org.csv"; };
OrgList best_org;
max_file.ADD_SETUP("best_org = main_pop.FIND_MAX('child_merit')" );
max_file.ADD_COLUMN("genome",       "best_org.TRAIT('genome')" );
max_file.ADD_COLUMN("merit",       "best_org.TRAIT('child_merit')" );
max_file.ADD_COLUMN("merit_given", "best_org.TRAIT('merit')" );
max_file.ADD_COLUMN("gen", "best_org.TRAIT('generation')" );

@START() {
  PRINT("random_seed = ", random_seed, "\n");  // Print seed at run start.
  main_pop.INJECT("avida_org", 1);             // Inject ancestor organism 
};

Var avg_gen; 
@UPDATE(Var ud) {
  scheduler.SCHEDULE();
  PRINT("UD:", GET_UPDATE(),
        "  pop_size=", main_pop.SIZE(),
        "  gen_mean=", main_pop.CALC_MEAN("generation"),
        "  merit_mean=", main_pop.CALC_MEAN("child_merit"),
        "  merit_max=", main_pop.CALC_MAX("child_merit")
       );
  fit_file.WRITE();
  max_file.WRITE();
  avg_gen = main_pop.CALC_MEAN("generation");
  IF(ud >= max_updates){ 
    //sys.SNAPSHOT();
    EXIT();
  }
};

