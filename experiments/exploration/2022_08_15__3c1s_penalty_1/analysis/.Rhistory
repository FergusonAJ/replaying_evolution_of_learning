rm(list = ls())
library(ggplot2)
source('../../../../global_shared_files/constant_vars__three_cues_one_set.R')
28:28
for(seed in 28:28){#{1:100){
input_filename = paste0('../data/reps/', seed, '/dominant_lineage_summary.csv')
if(!file.exists(input_filename)){
print(paste0('File does not exist: ', input_filename))
next
}
df = read.csv(input_filename)
if(nrow(df) <= 1){
print(paste0('File is empty or corrupted: ', input_filename))
next
}
print(paste0('Plotting seed: ', seed))
plot_dir = paste0('../plots/reps/', seed)
if(!dir.exists(plot_dir)) dir.create(plot_dir, recursive = T)
ggplot(df, aes(x = depth, color = seed_classification)) +
geom_point(aes(y = accuracy_mean)) +
geom_point(aes(y = accuracy_min), alpha = 0.1) +
geom_point(aes(y = accuracy_max), alpha = 0.1) +
scale_color_manual(values = color_map)
ggsave(paste0(plot_dir, '/accuracy.pdf'), width = 8, height = 6, units = 'in')
ggplot(df, aes(x = depth, color = seed_classification)) +
geom_point(aes(y = correct_doors_mean)) +
geom_point(aes(y = correct_doors_min), alpha = 0.1) +
geom_point(aes(y = correct_doors_max), alpha = 0.1) +
scale_color_manual(values = color_map)
ggsave(paste0(plot_dir, '/correct_doors.pdf'), width = 9, height = 6, units = 'in')
#
#ggplot(df, aes(x = depth)) +
#  geom_point(aes(y = correct_doors_mean)) +
#  geom_point(aes(y = correct_doors_min), alpha = 0.1) +
#  geom_point(aes(y = correct_doors_max), alpha = 0.1) +
#  geom_point(aes(y = incorrect_doors_mean, color = 'red')) +
#  geom_point(aes(y = incorrect_doors_min, color = 'red'), alpha = 0.1) +
#  geom_point(aes(y = incorrect_doors_max, color = 'red'), alpha = 0.1)
#
#ggplot(df, aes(x = depth)) +
#  geom_point(aes(y = correct_exits_mean)) +
#  geom_point(aes(y = correct_exits_min), alpha = 0.1) +
#  geom_point(aes(y = correct_exits_max), alpha = 0.1)
ggplot(df, aes(x = depth, color = seed_classification)) +
geom_point(aes(y = merit_mean)) +
geom_point(aes(y = merit_min), alpha = 0.1) +
geom_point(aes(y = merit_max), alpha = 0.1) +
scale_color_manual(values = color_map)
ggsave(paste0(plot_dir, '/merit.pdf'), width = 8, height = 6, units = 'in')
ggplot(df, aes(x = depth, color = seed_classification)) +
geom_point(aes(y = genome_length)) +
scale_color_manual(values = color_map)
ggsave(paste0(plot_dir, '/genome_length.pdf'), width = 8, height = 6, units = 'in')
}
rm(list = ls())
library(ggplot2)
seed = 57
filename = paste0('../data/reps/', seed, '/final_dominant_org_fitness.csv')
df = read.csv(filename)
ggplot(df, aes(x = trial_number)) +
geom_point(aes(y = doors_taken_0, color = '0', shape = 'taken')) +
geom_point(aes(y = doors_correct_0, color = '0', shape = 'correct')) +
geom_point(aes(y = doors_taken_1, color = '1', shape = 'taken')) +
geom_point(aes(y = doors_correct_1, color = '1', shape = 'correct')) +
geom_point(aes(y = doors_taken_2, color = '2', shape = 'taken')) +
geom_point(aes(y = doors_correct_2, color = '2', shape = 'correct')) +
ylab('Doors taken')
df$door_accuracy_0 = df$doors_correct_0 / df$doors_taken_0
df$door_accuracy_1 = df$doors_correct_1 / df$doors_taken_1
df$door_accuracy_2 = df$doors_correct_2 / df$doors_taken_2
df$doors_incorrect_0 = df$doors_taken_0 - df$doors_correct_0
df$doors_incorrect_1 = df$doors_taken_1 - df$doors_correct_1
df$doors_incorrect_2 = df$doors_taken_2 - df$doors_correct_2
rm(list = ls())
library(ggplot2)
seed = 57
filename = paste0('../data/reps/', seed, '/final_dominant_org_fitness.csv')
df = read.csv(filename)
rm(list = ls())
library(ggplot2)
seed = 28
filename = paste0('../data/reps/', seed, '/final_dominant_org_fitness.csv')
df = read.csv(filename)
ggplot(df, aes(x = trial_number)) +
geom_point(aes(y = doors_taken_0, color = '0', shape = 'taken')) +
geom_point(aes(y = doors_correct_0, color = '0', shape = 'correct')) +
geom_point(aes(y = doors_taken_1, color = '1', shape = 'taken')) +
geom_point(aes(y = doors_correct_1, color = '1', shape = 'correct')) +
geom_point(aes(y = doors_taken_2, color = '2', shape = 'taken')) +
geom_point(aes(y = doors_correct_2, color = '2', shape = 'correct')) +
ylab('Doors taken')
rm(list = ls())
library(ggplot2)
seed = 28
filename = paste0('../data/reps/', seed, '/final_dominant_org_fitness.csv')
df = read.csv(filename)
rm(list = ls())
library(ggplot2)
source('../../../../global_shared_files/constant_vars__three_cues_one_set.R')
seed = 28
input_filename = paste0('../data/reps/', seed, '/dominant_lineage_summary.csv')
if(!file.exists(input_filename)){
print(paste0('File does not exist: ', input_filename))
next
}
